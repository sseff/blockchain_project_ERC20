{"ast":null,"code":"var _jsxFileName = \"/Users/sefikaakman/Desktop/483 project2/483_project_ERC20/src/Wallet.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport Interactions from './Interactions';\nimport styles from './Wallet.module.css';\nimport simple_token_abi from './Contracts/simple_token_abi.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wallet = () => {\n  _s();\n  const [tokenName, setTokenName] = useState(\"Token\");\n  const [connectButtonName, setConnectButtonName] = useState(\"Connect\");\n  const [error, setError] = useState(null);\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(result => {\n        accountChangedHandler(result[0]);\n        setConnectButtonName(\"Wallet connected!\");\n      }).catch(error => {\n        setError(error.message);\n      });\n    } else {\n      console.log(\"You need to install MetaMask!\");\n      setError(\"MetaMask is not installed.\");\n    }\n  };\n  const accountChangedHandler = newAddress => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [tokenName, \" + \\\"ERC-20\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button6,\n      onClick: connectButtonHandler,\n      children: connectButtonName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Wallet, \"ekXOPaOb/UYk6dPjJ2BCFoFq2sk=\");\n_c = Wallet;\nexport default Wallet;\nvar _c;\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"names":["React","useState","useEffect","ethers","Interactions","styles","simple_token_abi","Wallet","tokenName","setTokenName","connectButtonName","setConnectButtonName","error","setError","connectWalletHandler","window","ethereum","isMetaMask","request","method","then","result","accountChangedHandler","catch","message","console","log","newAddress","button6","connectButtonHandler"],"sources":["/Users/sefikaakman/Desktop/483 project2/483_project_ERC20/src/Wallet.js"],"sourcesContent":["import {React, useState, useEffect} from 'react'\nimport {ethers} from 'ethers'\nimport Interactions from './Interactions'\nimport styles from './Wallet.module.css'\nimport simple_token_abi from './Contracts/simple_token_abi.json'\n\n\n\nconst Wallet = () => {\n    const [tokenName, setTokenName] = useState(\"Token\");\n    const [connectButtonName, setConnectButtonName] = useState(\"Connect\");\n    const [error, setError] = useState(null);\n    const connectWalletHandler = () => {\n        if(window.ethereum && window.ethereum.isMetaMask) {\n            window.ethereum.request({method: 'eth_requestAccounts'})\n            .then(result => {\n                accountChangedHandler(result[0]);\n                setConnectButtonName(\"Wallet connected!\");\n            })\n            .catch(error => {\n                setError(error.message);\n            })\n        }\n        else {\n            console.log(\"You need to install MetaMask!\");\n            setError(\"MetaMask is not installed.\")\n        }\n    }\n\n    const accountChangedHandler = (newAddress) => {\n        \n    }\n\n    return (\n        <div>\n            <h1>{tokenName} + \"ERC-20</h1>\n            <button className={styles.button6} onClick={connectButtonHandler}>{connectButtonName}</button>\n        </div>\n    );\n}\n\nexport default Wallet;"],"mappings":";;AAAA,SAAQA,KAAK,EAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAAQC,MAAM,QAAO,QAAQ;AAC7B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,gBAAgB,MAAM,mCAAmC;AAAA;AAIhE,MAAMC,MAAM,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EACnD,MAAM,CAACS,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGV,QAAQ,CAAC,SAAS,CAAC;EACrE,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMa,oBAAoB,GAAG,MAAM;IAC/B,IAAGC,MAAM,CAACC,QAAQ,IAAID,MAAM,CAACC,QAAQ,CAACC,UAAU,EAAE;MAC9CF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;QAACC,MAAM,EAAE;MAAqB,CAAC,CAAC,CACvDC,IAAI,CAACC,MAAM,IAAI;QACZC,qBAAqB,CAACD,MAAM,CAAC,CAAC,CAAC,CAAC;QAChCV,oBAAoB,CAAC,mBAAmB,CAAC;MAC7C,CAAC,CAAC,CACDY,KAAK,CAACX,KAAK,IAAI;QACZC,QAAQ,CAACD,KAAK,CAACY,OAAO,CAAC;MAC3B,CAAC,CAAC;IACN,CAAC,MACI;MACDC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5Cb,QAAQ,CAAC,4BAA4B,CAAC;IAC1C;EACJ,CAAC;EAED,MAAMS,qBAAqB,GAAIK,UAAU,IAAK,CAE9C,CAAC;EAED,oBACI;IAAA,wBACI;MAAA,WAAKnB,SAAS,EAAC,aAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAC9B;MAAQ,SAAS,EAAEH,MAAM,CAACuB,OAAQ;MAAC,OAAO,EAAEC,oBAAqB;MAAA,UAAEnB;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAU;EAAA;IAAA;IAAA;IAAA;EAAA,QAC5F;AAEd,CAAC;AAAA,GA/BKH,MAAM;AAAA,KAANA,MAAM;AAiCZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}